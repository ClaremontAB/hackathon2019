// <auto-generated />
using System;
using ComputerVision.Data2;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ComputerVision.Data2.Migrations
{
    [DbContext(typeof(ComputerVisionContext))]
    [Migration("20181009134800_Migration9")]
    partial class Migration9
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview2-35157")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ComputerVision.Data2.AdultInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AdultScore");

                    b.Property<bool>("IsAdultContent");

                    b.Property<bool>("IsRacyContent");

                    b.Property<double>("RacyScore");

                    b.HasKey("Id");

                    b.ToTable("AdultInfo");
                });

            modelBuilder.Entity("ComputerVision.Data2.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DetailId");

                    b.Property<int?>("ImageAnalysisId");

                    b.Property<string>("Name");

                    b.Property<double>("Score");

                    b.HasKey("Id");

                    b.HasIndex("DetailId");

                    b.HasIndex("ImageAnalysisId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("ComputerVision.Data2.CategoryDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("CategoryDetail");
                });

            modelBuilder.Entity("ComputerVision.Data2.CelebritiesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryDetailId");

                    b.Property<double>("Confidence");

                    b.Property<int?>("FaceRectangleId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CategoryDetailId");

                    b.HasIndex("FaceRectangleId");

                    b.ToTable("CelebritiesModel");
                });

            modelBuilder.Entity("ComputerVision.Data2.ColorInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccentColor");

                    b.Property<string>("DominantColorBackground");

                    b.Property<string>("DominantColorForeground");

                    b.Property<string>("DominantColors");

                    b.Property<bool>("IsBWImg");

                    b.HasKey("Id");

                    b.ToTable("ColorInfo");
                });

            modelBuilder.Entity("ComputerVision.Data2.FaceDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<int?>("FaceRectangleId");

                    b.Property<int?>("Gender");

                    b.Property<int?>("ImageAnalysisId");

                    b.HasKey("Id");

                    b.HasIndex("FaceRectangleId");

                    b.HasIndex("ImageAnalysisId");

                    b.ToTable("FaceDescription");
                });

            modelBuilder.Entity("ComputerVision.Data2.FaceRectangle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Height");

                    b.Property<int>("Left");

                    b.Property<int>("Top");

                    b.Property<int>("Width");

                    b.HasKey("Id");

                    b.ToTable("FaceRectangle");
                });

            modelBuilder.Entity("ComputerVision.Data2.ImageAnalysis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdultId");

                    b.Property<int?>("ColorId");

                    b.Property<int?>("DescriptionId");

                    b.Property<int?>("ImageTypeId");

                    b.Property<int?>("MetadataId");

                    b.Property<string>("RequestId");

                    b.HasKey("Id");

                    b.HasIndex("AdultId");

                    b.HasIndex("ColorId");

                    b.HasIndex("DescriptionId");

                    b.HasIndex("ImageTypeId");

                    b.HasIndex("MetadataId");

                    b.ToTable("ImageAnalysis");
                });

            modelBuilder.Entity("ComputerVision.Data2.ImageBytes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Bytes");

                    b.Property<int>("ImageFileId");

                    b.HasKey("Id");

                    b.ToTable("ImageBytes");
                });

            modelBuilder.Entity("ComputerVision.Data2.ImageCaption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Confidence");

                    b.Property<int?>("ImageDescriptionDetailsId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("ImageDescriptionDetailsId");

                    b.ToTable("ImageCaption");
                });

            modelBuilder.Entity("ComputerVision.Data2.ImageDescriptionDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tags");

                    b.HasKey("Id");

                    b.ToTable("ImageDescriptionDetails");
                });

            modelBuilder.Entity("ComputerVision.Data2.ImageFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnylysisId");

                    b.Property<string>("CameraManufacturer");

                    b.Property<string>("CameraModel");

                    b.Property<string>("ContentType");

                    b.Property<DateTimeOffset>("DateCreated");

                    b.Property<DateTimeOffset>("DateTaken");

                    b.Property<string>("DisplayName");

                    b.Property<string>("DisplayType");

                    b.Property<string>("FileType");

                    b.Property<string>("FolderRelativeId");

                    b.Property<int?>("HandwrittenRecognitionResultId");

                    b.Property<string>("HashString");

                    b.Property<long>("Height");

                    b.Property<bool>("IsAvailable");

                    b.Property<double?>("Latitude");

                    b.Property<double?>("Longitude");

                    b.Property<string>("Name");

                    b.Property<string>("Orientation");

                    b.Property<string>("Path");

                    b.Property<int?>("PrintedRecognitionResultId");

                    b.Property<long>("Rating");

                    b.Property<string>("Title");

                    b.Property<long>("Width");

                    b.HasKey("Id");

                    b.ToTable("ImageFile");
                });

            modelBuilder.Entity("ComputerVision.Data2.ImageMetadata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Format");

                    b.Property<int>("Height");

                    b.Property<int>("Width");

                    b.HasKey("Id");

                    b.ToTable("ImageMetadata");
                });

            modelBuilder.Entity("ComputerVision.Data2.ImageTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Confidence");

                    b.Property<string>("Hint");

                    b.Property<int?>("ImageAnalysisId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ImageAnalysisId");

                    b.ToTable("ImageTag");
                });

            modelBuilder.Entity("ComputerVision.Data2.ImageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClipArtType");

                    b.Property<int>("LineDrawingType");

                    b.HasKey("Id");

                    b.ToTable("ImageType");
                });

            modelBuilder.Entity("ComputerVision.Data2.LandmarksModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryDetailId");

                    b.Property<double>("Confidence");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CategoryDetailId");

                    b.ToTable("LandmarksModel");
                });

            modelBuilder.Entity("ComputerVision.Data2.Line", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BoundingBox");

                    b.Property<int?>("RecognitionResultId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("RecognitionResultId");

                    b.ToTable("Line");
                });

            modelBuilder.Entity("ComputerVision.Data2.RecognitionResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("RecognitionResult");
                });

            modelBuilder.Entity("ComputerVision.Data2.Word", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BoundingBox");

                    b.Property<int?>("LineId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("LineId");

                    b.ToTable("Word");
                });

            modelBuilder.Entity("ComputerVision.Data2.Category", b =>
                {
                    b.HasOne("ComputerVision.Data2.CategoryDetail", "Detail")
                        .WithMany()
                        .HasForeignKey("DetailId");

                    b.HasOne("ComputerVision.Data2.ImageAnalysis")
                        .WithMany("Categories")
                        .HasForeignKey("ImageAnalysisId");
                });

            modelBuilder.Entity("ComputerVision.Data2.CelebritiesModel", b =>
                {
                    b.HasOne("ComputerVision.Data2.CategoryDetail")
                        .WithMany("Celebrities")
                        .HasForeignKey("CategoryDetailId");

                    b.HasOne("ComputerVision.Data2.FaceRectangle", "FaceRectangle")
                        .WithMany()
                        .HasForeignKey("FaceRectangleId");
                });

            modelBuilder.Entity("ComputerVision.Data2.FaceDescription", b =>
                {
                    b.HasOne("ComputerVision.Data2.FaceRectangle", "FaceRectangle")
                        .WithMany()
                        .HasForeignKey("FaceRectangleId");

                    b.HasOne("ComputerVision.Data2.ImageAnalysis")
                        .WithMany("Faces")
                        .HasForeignKey("ImageAnalysisId");
                });

            modelBuilder.Entity("ComputerVision.Data2.ImageAnalysis", b =>
                {
                    b.HasOne("ComputerVision.Data2.AdultInfo", "Adult")
                        .WithMany()
                        .HasForeignKey("AdultId");

                    b.HasOne("ComputerVision.Data2.ColorInfo", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.HasOne("ComputerVision.Data2.ImageDescriptionDetails", "Description")
                        .WithMany()
                        .HasForeignKey("DescriptionId");

                    b.HasOne("ComputerVision.Data2.ImageType", "ImageType")
                        .WithMany()
                        .HasForeignKey("ImageTypeId");

                    b.HasOne("ComputerVision.Data2.ImageMetadata", "Metadata")
                        .WithMany()
                        .HasForeignKey("MetadataId");
                });

            modelBuilder.Entity("ComputerVision.Data2.ImageCaption", b =>
                {
                    b.HasOne("ComputerVision.Data2.ImageDescriptionDetails")
                        .WithMany("Captions")
                        .HasForeignKey("ImageDescriptionDetailsId");
                });

            modelBuilder.Entity("ComputerVision.Data2.ImageTag", b =>
                {
                    b.HasOne("ComputerVision.Data2.ImageAnalysis")
                        .WithMany("Tags")
                        .HasForeignKey("ImageAnalysisId");
                });

            modelBuilder.Entity("ComputerVision.Data2.LandmarksModel", b =>
                {
                    b.HasOne("ComputerVision.Data2.CategoryDetail")
                        .WithMany("Landmarks")
                        .HasForeignKey("CategoryDetailId");
                });

            modelBuilder.Entity("ComputerVision.Data2.Line", b =>
                {
                    b.HasOne("ComputerVision.Data2.RecognitionResult")
                        .WithMany("Lines")
                        .HasForeignKey("RecognitionResultId");
                });

            modelBuilder.Entity("ComputerVision.Data2.Word", b =>
                {
                    b.HasOne("ComputerVision.Data2.Line")
                        .WithMany("Words")
                        .HasForeignKey("LineId");
                });
#pragma warning restore 612, 618
        }
    }
}
